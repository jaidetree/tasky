// Generated by ReScript, PLEASE EDIT WITH CARE

import * as State from "./State.res.mjs";
import * as Caml_module from "rescript/lib/es6/caml_module.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as JsxRuntime from "preact/jsx-runtime";

var TaskRow = Caml_module.init_mod([
      "TasksIndex.res",
      7,
      4
    ], {
      TAG: "Module",
      _0: [[
          "Function",
          "make"
        ]]
    });

function TasksIndex$TaskRow(props) {
  var __level = props.level;
  var tasks = props.tasks;
  var task = props.task;
  var level = __level !== undefined ? __level : 0;
  var subTasks = tasks.filter(function (subTask) {
        var id = subTask.parent_task_id;
        if (id !== undefined) {
          return id === task.id;
        } else {
          return false;
        }
      });
  var _date = task.completed_at;
  var completed = _date !== undefined;
  var onClick = function (_e) {
    State.AppFSM.dispatch({
          TAG: "OpenTask",
          _0: {
            TAG: "Open",
            _0: task.id
          }
        });
  };
  return JsxRuntime.jsxs(JsxRuntime.Fragment, {
              children: [
                JsxRuntime.jsxs("tr", {
                      children: [
                        JsxRuntime.jsx("td", {
                              children: JsxRuntime.jsx("span", {
                                    children: task.title,
                                    style: {
                                      paddingLeft: level.toString() + "rem"
                                    }
                                  }),
                              className: "py-3 px-4 text-left"
                            }),
                        JsxRuntime.jsx("td", {
                              children: Core__Option.getOr(task.due_date, "-"),
                              className: "py-3 px-4"
                            }),
                        JsxRuntime.jsx("td", {
                              children: task.estimated_time.toString(),
                              className: "py-3 px-4"
                            }),
                        JsxRuntime.jsx("td", {
                              children: task.tracked_time.toString(),
                              className: "py-3 px-4"
                            }),
                        JsxRuntime.jsx("td", {
                              children: JsxRuntime.jsx("form", {
                                    children: JsxRuntime.jsx("input", {
                                          checked: completed,
                                          name: "complete",
                                          type: "checkbox"
                                        })
                                  }),
                              className: "py-3 px-4"
                            })
                      ],
                      className: "border-b border-gray-500",
                      onClick: onClick
                    }),
                subTasks.map(function (task) {
                      return JsxRuntime.jsx(TaskRow.make, {
                                  task: task,
                                  tasks: tasks,
                                  level: level + 1 | 0
                                }, task.id);
                    })
              ]
            });
}

Caml_module.update_mod({
      TAG: "Module",
      _0: [[
          "Function",
          "make"
        ]]
    }, TaskRow, {
      make: TasksIndex$TaskRow
    });

function TasksIndex$TasksTable(props) {
  var tasks = props.tasks;
  var rootTasks = tasks.filter(function (task) {
        return Core__Option.isNone(task.parent_task_id);
      });
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsxs("table", {
                    children: [
                      JsxRuntime.jsx("thead", {
                            children: JsxRuntime.jsxs("tr", {
                                  children: [
                                    JsxRuntime.jsx("th", {
                                          children: "Name",
                                          className: "py-3 px-4 text-left"
                                        }),
                                    JsxRuntime.jsx("th", {
                                          children: "Due",
                                          className: "py-3 px-4 text-left"
                                        }),
                                    JsxRuntime.jsx("th", {
                                          children: "Estimate",
                                          className: "py-3 px-4 text-left"
                                        }),
                                    JsxRuntime.jsx("th", {
                                          children: "Elapsed",
                                          className: "py-3 px-4 text-left"
                                        }),
                                    JsxRuntime.jsx("th", {
                                          children: "",
                                          className: "py-3 px-4 text-left"
                                        })
                                  ]
                                }),
                            className: "bg-gray-100 dark:bg-slate-600"
                          }),
                      JsxRuntime.jsx("tbody", {
                            children: rootTasks.map(function (task) {
                                  return JsxRuntime.jsx(TaskRow.make, {
                                              task: task,
                                              tasks: tasks
                                            }, task.id);
                                })
                          })
                    ],
                    className: "min-w-full table-auto"
                  }),
              className: "overflow-x-auto shadow-md rounded-lg"
            });
}

var TasksTable = {
  make: TasksIndex$TasksTable
};

function TasksIndex(props) {
  var onClick = function (_e) {
    State.AppFSM.dispatch({
          TAG: "NewTask",
          _0: "Create"
        });
  };
  return JsxRuntime.jsxs("section", {
              children: [
                JsxRuntime.jsxs("header", {
                      children: [
                        JsxRuntime.jsx("h1", {
                              children: "Tasks",
                              className: "text-2xl font-bold"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx("button", {
                                    children: "New Task",
                                    className: "btn bg-blue-500",
                                    onClick: onClick
                                  }),
                              className: "inline-flex flex-row gap-2 justify-end"
                            })
                      ],
                      className: "flex flex-row justify-between items-end"
                    }),
                JsxRuntime.jsx(TasksIndex$TasksTable, {
                      tasks: props.tasks
                    })
              ],
              className: "space-y-4",
              id: "tasks-container"
            });
}

var make = TasksIndex;

export {
  TaskRow ,
  TasksTable ,
  make ,
}
/* TaskRow Not a pure module */
